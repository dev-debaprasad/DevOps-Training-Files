# IAM USER #
_____________

Name - Terra-user
⦁	AdminAccess

@ Terra-Server @
______________

// Creating instance with Amazon Linux AMI

⦁	Amazon Linux
⦁	T3.micro
⦁	12gib gp2

# hostnamectl set-hostname terra.example.com
# bash
# sudo dnf install -y dnf-plugins-core
# sudo dnf config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo
# sudo dnf -y install terraform
# terraform -v
# aws configure
# mkdir /terra-code
# cd /terra-code
# vim my-ec2.tf
> 
provider "aws" {
  region     = "us-east-1"
  access_key = "xyz"
  secret_key = "xyz"
}
resource "aws_instance" "devops-server" {
  ami                    = "ami-0341d95f75f311023"    # change accordingly
  instance_type          = "t3.micro"
  availability_zone      = "us-east-1a"
  key_name               = "thu-key"  # No .pem extension and change accordingly
  vpc_security_group_ids = [aws_security_group.tera_sg.id]

  tags = {
    Name = "Hello"
  }
}

resource "aws_security_group" "tera_sg" {
  name        = "allow_tls_terraform"  # Sec group name
  description = "Allow SSH and HTTP"
  vpc_id      = "vpc-0aa01ddfe401988c8"   #change accordingly

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "tera-sg"
  }
}


//change the key and vpc id

# terraform init
# terraform validate
# terraform fmt
# terraform plan
# terraform apply
